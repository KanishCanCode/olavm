{
  "program": "heap_malloc:\n.LBL14_0:\n  add r9 r9 1\n  mstore [r9,-1] r1\n  mload r1 [r9,-1]\n  mov r3 18446744060824649731\n  mload r0 [r3]\n  add r2 r0 r1\n  mov r1 18446744060824649731\n  mstore [r1] r2\n  add r9 r9 -1\n  ret\nvector_new:\n.LBL15_0:\n  add r9 r9 1\n  mstore [r9,-1] r1\n  mload r1 [r9,-1]\n  mov r4 18446744060824649731\n  mload r0 [r4]\n  add r2 r1 1\n  add r3 r0 r2\n  mov r2 18446744060824649731\n  mstore [r2] r3\n  mstore [r0] r1\n  add r9 r9 -1\n  ret\nmemcpy:\n.LBL16_0:\n  add r9 r9 4\n  mstore [r9,-4] r1\n  mload r1 [r9,-4]\n  mstore [r9,-3] r2\n  mload r2 [r9,-3]\n  mstore [r9,-2] r3\n  mload r3 [r9,-2]\n  mov r4 0\n  mstore [r9,-1] r4\n  jmp .LBL16_1\n.LBL16_1:\n  mload r4 [r9,-1]\n  gte r5 r3 r4\n  neq r6 r4 r3\n  and r5 r5 r6\n  cjmp r5 .LBL16_2\n  jmp .LBL16_3\n.LBL16_2:\n  mload r6 [r1,r4]\n  mstore [r2,r4] r6\n  add r5 r4 1\n  mstore [r9,-1] r5\n  jmp .LBL16_1\n.LBL16_3:\n  add r9 r9 -4\n  ret\nmemcmp_eq:\n.LBL17_0:\n  add r9 r9 4\n  mstore [r9,-4] r1\n  mload r1 [r9,-4]\n  mstore [r9,-3] r2\n  mload r2 [r9,-3]\n  mstore [r9,-2] r3\n  mload r3 [r9,-2]\n  mov r4 0\n  mstore [r9,-1] r4\n  jmp .LBL17_1\n.LBL17_1:\n  mload r4 [r9,-1]\n  gte r5 r3 r4\n  neq r6 r4 r3\n  and r5 r5 r6\n  cjmp r5 .LBL17_2\n  mov r0 1\n  jmp .LBL17_3\n.LBL17_2:\n  mload r6 [r1,r4]\n  mload r7 [r2,r4]\n  add r5 r4 1\n  mstore [r9,-1] r5\n  eq r4 r6 r7\n  cjmp r4 .LBL17_1\n  mov r0 0\n  jmp .LBL17_3\n.LBL17_3:\n  add r9 r9 -4\n  ret\nmemcmp_ugt:\n.LBL18_0:\n  add r9 r9 4\n  mstore [r9,-4] r1\n  mload r1 [r9,-4]\n  mstore [r9,-3] r2\n  mload r2 [r9,-3]\n  mstore [r9,-2] r3\n  mload r3 [r9,-2]\n  mov r4 0\n  mstore [r9,-1] r4\n  jmp .LBL18_1\n.LBL18_1:\n  mload r4 [r9,-1]\n  gte r5 r3 r4\n  neq r6 r4 r3\n  and r5 r5 r6\n  cjmp r5 .LBL18_2\n  mov r0 1\n  jmp .LBL18_3\n.LBL18_2:\n  mload r6 [r1,r4]\n  mload r7 [r2,r4]\n  add r5 r4 1\n  mstore [r9,-1] r5\n  gte r4 r6 r7\n  neq r5 r6 r7\n  and r4 r4 r5\n  cjmp r4 .LBL18_1\n  mov r0 0\n  jmp .LBL18_3\n.LBL18_3:\n  add r9 r9 -4\n  ret\nmemcmp_uge:\n.LBL19_0:\n  add r9 r9 4\n  mstore [r9,-4] r1\n  mload r1 [r9,-4]\n  mstore [r9,-3] r2\n  mload r2 [r9,-3]\n  mstore [r9,-2] r3\n  mload r3 [r9,-2]\n  mov r4 0\n  mstore [r9,-1] r4\n  jmp .LBL19_1\n.LBL19_1:\n  mload r4 [r9,-1]\n  gte r5 r3 r4\n  neq r6 r4 r3\n  and r5 r5 r6\n  cjmp r5 .LBL19_2\n  mov r0 1\n  jmp .LBL19_3\n.LBL19_2:\n  mload r6 [r1,r4]\n  mload r7 [r2,r4]\n  add r5 r4 1\n  mstore [r9,-1] r5\n  gte r4 r6 r7\n  cjmp r4 .LBL19_1\n  mov r0 0\n  jmp .LBL19_3\n.LBL19_3:\n  add r9 r9 -4\n  ret\nu32_div_mod:\n.LBL20_0:\n  add r9 r9 9\n  mstore [r9,-4] r1\n  mload r1 [r9,-4]\n  mstore [r9,-7] r1\n  mstore [r9,-3] r2\n  mload r1 [r9,-3]\n  mstore [r9,-8] r1\n  mstore [r9,-2] r3\n  mload r3 [r9,-2]\n  mstore [r9,-1] r4\n  mload r4 [r9,-1]\n  mload r1 [r9,-8]\n  mov r2 r1\n  mload r1 [r9,-7]\n.PROPHET20_0:\n  mov r0 psp\n  mload r0 [r0]\n  mov r1 r0\n  mstore [r9,-9] r1\n  mload r1 [r9,-9]\n  range r1\n  mload r1 [r9,-9]\n  add r5 r1 1\n  not r7 r5\n  add r7 r7 1\n  mload r1 [r9,-8]\n  add r6 r1 r7\n  range r6\n  mload r1 [r9,-8]\n  mov r2 r1\n  mload r1 [r9,-7]\n.PROPHET20_1:\n  mov r0 psp\n  mload r0 [r0]\n  mov r1 r0\n  range r3\n  mload r2 [r9,-8]\n  mul r2 r1 r2\n  mstore [r9,-5] r2\n  mload r2 [r9,-5]\n  mload r5 [r9,-9]\n  add r2 r2 r5\n  mstore [r9,-6] r2\n  mload r2 [r9,-6]\n  mload r5 [r9,-7]\n  eq r2 r2 r5\n  assert r2\n  mstore [r3] r1\n  mload r1 [r9,-9]\n  mstore [r4] r1\n  add r9 r9 -9\n  ret\nu32_power:\n.LBL21_0:\n  add r9 r9 2\n  mstore [r9,-2] r1\n  mload r1 [r9,-2]\n  mstore [r9,-1] r2\n  mload r2 [r9,-1]\n  mov r0 1\n  mov r3 0\n  jmp .LBL21_1\n.LBL21_1:\n  add r5 r3 1\n  mul r4 r0 r1\n  gte r3 r2 r5\n  cjmp r3 .LBL21_1\n  mov r0 r4\n  mov r3 r5\n  jmp .LBL21_2\n.LBL21_2:\n  range r0\n  add r9 r9 -2\n  ret\nonlyEntrypointCall:\n.LBL22_0:\n  add r9 r9 3\n  mstore [r9,-2] r9\n  mov r1 4\n  call heap_malloc\n  mov r5 r0\n  mov r6 0\n  mstore [r5] r6\n  mov r6 0\n  mstore [r5,+1] r6\n  mov r6 0\n  mstore [r5,+2] r6\n  mov r6 32769\n  mstore [r5,+3] r6\n  mstore [r9,-3] r5\n  mov r1 12\n  call heap_malloc\n  mov r1 r0\n  mov r5 1\n  tload r1 r5 12\n  mload r2 [r9,-3]\n  mov r3 4\n  call memcmp_eq\n  mov r5 r0\n  assert r5\n  add r9 r9 -3\n  ret\nignoreDelegateCall:\n.LBL23_0:\n  add r9 r9 3\n  mstore [r9,-2] r9\n  mov r1 4\n  call heap_malloc\n  mov r5 r0\n  mstore [r9,-3] r5\n  mov r5 1\n  tload r5 r5 4\n  mstore [r9,-3] r5\n  mov r1 8\n  call heap_malloc\n  mov r2 r0\n  mov r5 1\n  tload r2 r5 8\n  mov r3 4\n  mload r1 [r9,-3]\n  call memcmp_eq\n  mov r5 r0\n  assert r5\n  add r9 r9 -3\n  ret\nvalidateTransaction:\n.LBL24_0:\n  add r9 r9 19\n  mstore [r9,-2] r9\n  mov r5 r1\n  mov r6 r2\n  mov r7 r3\n  mstore [r9,-6] r5\n  mstore [r9,-5] r6\n  mstore [r9,-4] r7\n  mload r5 [r9,-4]\n  call onlyEntrypointCall\n  call ignoreDelegateCall\n  mov r1 42\n  call vector_new\n  mov r5 r0\n  mstore [r9,-15] r5\n  mload r5 [r9,-15]\n  add r5 r5 1\n  mov r6 118\n  mstore [r5] r6\n  mov r6 97\n  mstore [r5,+1] r6\n  mov r6 108\n  mstore [r5,+2] r6\n  mov r6 105\n  mstore [r5,+3] r6\n  mov r6 100\n  mstore [r5,+4] r6\n  mov r6 97\n  mstore [r5,+5] r6\n  mov r6 116\n  mstore [r5,+6] r6\n  mov r6 101\n  mstore [r5,+7] r6\n  mov r6 84\n  mstore [r5,+8] r6\n  mov r6 114\n  mstore [r5,+9] r6\n  mov r6 97\n  mstore [r5,+10] r6\n  mov r6 110\n  mstore [r5,+11] r6\n  mov r6 115\n  mstore [r5,+12] r6\n  mov r6 97\n  mstore [r5,+13] r6\n  mov r6 99\n  mstore [r5,+14] r6\n  mov r6 116\n  mstore [r5,+15] r6\n  mov r6 105\n  mstore [r5,+16] r6\n  mov r6 111\n  mstore [r5,+17] r6\n  mov r6 110\n  mstore [r5,+18] r6\n  mov r6 40\n  mstore [r5,+19] r6\n  mov r6 104\n  mstore [r5,+20] r6\n  mov r6 97\n  mstore [r5,+21] r6\n  mov r6 115\n  mstore [r5,+22] r6\n  mov r6 104\n  mstore [r5,+23] r6\n  mov r6 44\n  mstore [r5,+24] r6\n  mov r6 104\n  mstore [r5,+25] r6\n  mov r6 97\n  mstore [r5,+26] r6\n  mov r6 115\n  mstore [r5,+27] r6\n  mov r6 104\n  mstore [r5,+28] r6\n  mov r6 44\n  mstore [r5,+29] r6\n  mov r6 84\n  mstore [r5,+30] r6\n  mov r6 114\n  mstore [r5,+31] r6\n  mov r6 97\n  mstore [r5,+32] r6\n  mov r6 110\n  mstore [r5,+33] r6\n  mov r6 115\n  mstore [r5,+34] r6\n  mov r6 97\n  mstore [r5,+35] r6\n  mov r6 99\n  mstore [r5,+36] r6\n  mov r6 116\n  mstore [r5,+37] r6\n  mov r6 105\n  mstore [r5,+38] r6\n  mov r6 111\n  mstore [r5,+39] r6\n  mov r6 110\n  mstore [r5,+40] r6\n  mov r6 41\n  mstore [r5,+41] r6\n  mload r5 [r9,-15]\n  mload r5 [r5]\n  mstore [r9,-13] r5\n  mov r1 4\n  call heap_malloc\n  mov r5 r0\n  mload r6 [r9,-15]\n  add r6 r6 1\n  mload r7 [r9,-13]\n  poseidon r5 r6 r7\n  mstore [r9,-3] r5\n  mload r5 [r9,-3]\n  mstore [r9,-18] r5\n  mov r1 4\n  call vector_new\n  mov r5 r0\n  mload r6 [r9,-18]\n  mload r6 [r6]\n  add r7 r5 1\n  mstore [r7] r6\n  mload r6 [r9,-18]\n  mload r6 [r6,+1]\n  mstore [r7,+1] r6\n  mload r6 [r9,-18]\n  mload r6 [r6,+2]\n  mstore [r7,+2] r6\n  mload r6 [r9,-18]\n  mload r6 [r6,+3]\n  mstore [r7,+3] r6\n  mload r6 [r5]\n  not r7 1\n  add r7 r7 1\n  add r6 r6 r7\n  mstore [r9,-7] r6\n  not r7 0\n  add r7 r7 1\n  mload r6 [r9,-7]\n  add r6 r6 r7\n  mstore [r9,-8] r6\n  mload r6 [r9,-8]\n  range r6\n  add r5 r5 1\n  mload r0 [r5]\n  add r9 r9 -19\n  ret\nexecuteTransaction:\n.LBL25_0:\n  add r9 r9 53\n  mstore [r9,-2] r9\n  mov r5 r1\n  mov r6 r2\n  mov r7 r3\n  mstore [r9,-6] r5\n  mstore [r9,-5] r6\n  mstore [r9,-4] r7\n  mload r5 [r9,-4]\n  mstore [r9,-16] r5\n  call onlyEntrypointCall\n  call ignoreDelegateCall\n  mload r5 [r9,-16]\n  mload r5 [r5,+4]\n  mstore [r9,-33] r5\n  mload r5 [r9,-33]\n  mload r5 [r5]\n  not r7 1\n  add r7 r7 1\n  add r6 r5 r7\n  mstore [r9,-13] r6\n  not r7 0\n  add r7 r7 1\n  mload r6 [r9,-13]\n  add r6 r6 r7\n  mstore [r9,-15] r6\n  mload r6 [r9,-15]\n  range r6\n  not r7 4\n  add r7 r7 1\n  add r5 r5 r7\n  mstore [r9,-10] r5\n  mload r5 [r9,-10]\n  range r5\n  mov r1 4\n  call vector_new\n  mov r5 r0\n  mstore [r9,-40] r5\n  mov r3 4\n  mload r5 [r9,-40]\n  add r2 r5 1\n  mload r5 [r9,-33]\n  add r5 r5 1\n  add r1 r5 0\n  call memcpy\n  mload r5 [r9,-40]\n  mload r5 [r5]\n  mload r5 [r9,-40]\n  add r5 r5 1\n  mstore [r9,-3] r5\n  mload r5 [r9,-16]\n  mload r5 [r5,+4]\n  mstore [r9,-46] r5\n  mload r5 [r9,-46]\n  mload r5 [r5]\n  not r7 1\n  add r7 r7 1\n  add r6 r5 r7\n  mstore [r9,-9] r6\n  not r7 4\n  add r7 r7 1\n  mload r6 [r9,-9]\n  add r6 r6 r7\n  mstore [r9,-12] r6\n  mload r6 [r9,-12]\n  range r6\n  not r7 r5\n  add r7 r7 1\n  add r6 r5 r7\n  mstore [r9,-14] r6\n  mload r6 [r9,-14]\n  range r6\n  not r7 4\n  add r7 r7 1\n  add r5 r5 r7\n  mstore [r9,-8] r5\n  mload r5 [r9,-8]\n  range r5\n  mload r1 [r9,-8]\n  call vector_new\n  mov r5 r0\n  mstore [r9,-49] r5\n  mload r3 [r9,-8]\n  mload r5 [r9,-49]\n  add r2 r5 1\n  mload r5 [r9,-46]\n  add r5 r5 1\n  add r1 r5 4\n  call memcpy\n  mload r5 [r9,-3]\n  mload r6 [r9,-49]\n  mload r6 [r6]\n  mload r7 [r9,-49]\n  add r7 r7 1\n  tstore r7 r6\n  sccall r5 0\n  mov r1 1\n  call heap_malloc\n  mov r5 r0\n  mov r6 1\n  tload r5 r6 1\n  mload r5 [r5]\n  mstore [r9,-53] r5\n  mload r5 [r9,-53]\n  add r5 r5 2\n  mstore [r9,-7] r5\n  mload r1 [r9,-7]\n  call heap_malloc\n  mload r5 [r9,-53]\n  mstore [r0] r5\n  mov r5 1\n  add r6 r0 1\n  mload r7 [r9,-53]\n  add r7 r7 1\n  mstore [r9,-11] r7\n  mload r7 [r9,-11]\n  tload r6 r5 r7\n  add r9 r9 -53\n  ret\npayForTransaction:\n.LBL26_0:\n  add r9 r9 5\n  mstore [r9,-2] r9\n  mov r5 r1\n  mov r6 r2\n  mov r7 r3\n  mstore [r9,-5] r5\n  mstore [r9,-4] r6\n  mstore [r9,-3] r7\n  mload r5 [r9,-3]\n  call onlyEntrypointCall\n  call ignoreDelegateCall\n  add r9 r9 -5\n  ret\nprepareForPaymaster:\n.LBL27_0:\n  add r9 r9 5\n  mstore [r9,-2] r9\n  mov r5 r1\n  mov r6 r2\n  mov r7 r3\n  mstore [r9,-5] r5\n  mstore [r9,-4] r6\n  mstore [r9,-3] r7\n  mload r5 [r9,-3]\n  call onlyEntrypointCall\n  call ignoreDelegateCall\n  add r9 r9 -5\n  ret\nfunction_dispatch:\n.LBL28_0:\n  add r9 r9 62\n  mstore [r9,-2] r9\n  mov r2 r3\n  mstore [r9,-3] r2\n  mload r2 [r9,-3]\n  eq r8 r1 3726813225\n  cjmp r8 .LBL28_2\n  eq r8 r1 3602345202\n  cjmp r8 .LBL28_3\n  eq r8 r1 4150653994\n  cjmp r8 .LBL28_4\n  eq r8 r1 998595747\n  cjmp r8 .LBL28_5\n  eq r8 r1 3954661726\n  cjmp r8 .LBL28_6\n  eq r8 r1 770451483\n  cjmp r8 .LBL28_7\n  jmp .LBL28_1\n.LBL28_1:\n  ret\n.LBL28_2:\n  call onlyEntrypointCall\n  mov r1 1\n  call heap_malloc\n  mov r1 r0\n  mov r2 0\n  mstore [r1] r2\n  tstore r1 1\n  add r9 r9 -62\n  ret\n.LBL28_3:\n  call ignoreDelegateCall\n  mov r1 1\n  call heap_malloc\n  mov r1 r0\n  mov r2 0\n  mstore [r1] r2\n  tstore r1 1\n  add r9 r9 -62\n  ret\n.LBL28_4:\n  mstore [r9,-11] r2\n  mload r2 [r9,-11]\n  add r2 r2 4\n  mstore [r9,-13] r2\n  mload r2 [r9,-13]\n  add r2 r2 4\n  mstore [r9,-14] r2\n  mload r2 [r9,-14]\n  mload r2 [r2,+4]\n  mstore [r9,-6] r2\n  mload r2 [r9,-14]\n  mload r2 [r2,+5]\n  mstore [r9,-8] r2\n  mload r2 [r9,-14]\n  mload r2 [r2,+6]\n  mstore [r9,-9] r2\n  mload r2 [r9,-14]\n  mload r2 [r2,+7]\n  mov r4 7\n  add r1 r2 1\n  add r1 r4 r1\n  mstore [r9,-5] r1\n  mload r1 [r9,-5]\n  mload r2 [r9,-14]\n  mload r1 [r2,r1]\n  add r3 r1 1\n  mload r1 [r9,-5]\n  add r1 r1 r3\n  mstore [r9,-10] r1\n  mload r1 [r9,-10]\n  mload r2 [r9,-14]\n  mload r1 [r2,r1]\n  mstore [r9,-12] r1\n  mov r1 8\n  call heap_malloc\n  mov r3 r0\n  mload r1 [r9,-14]\n  mstore [r3] r1\n  mload r1 [r9,-6]\n  mstore [r3,+1] r1\n  mload r1 [r9,-8]\n  mstore [r3,+2] r1\n  mload r1 [r9,-9]\n  mstore [r3,+3] r1\n  mload r1 [r9,-14]\n  add r1 r1 7\n  mstore [r3,+4] r1\n  mload r1 [r9,-5]\n  mload r2 [r9,-14]\n  add r1 r2 r1\n  mstore [r3,+5] r1\n  mload r1 [r9,-10]\n  mload r2 [r9,-14]\n  add r1 r2 r1\n  mstore [r3,+6] r1\n  mload r1 [r9,-12]\n  add r1 r1 1\n  mstore [r9,-4] r1\n  mload r1 [r9,-4]\n  mload r2 [r9,-10]\n  add r1 r2 r1\n  mstore [r9,-7] r1\n  mload r1 [r9,-7]\n  mload r2 [r9,-14]\n  add r1 r2 r1\n  mstore [r3,+7] r1\n  mload r2 [r9,-13]\n  mload r1 [r9,-11]\n  call validateTransaction\n  mov r1 r0\n  mstore [r9,-15] r1\n  mov r1 2\n  call heap_malloc\n  mov r1 r0\n  mload r2 [r9,-15]\n  mstore [r1] r2\n  mov r2 1\n  mstore [r1,+1] r2\n  tstore r1 2\n  add r9 r9 -62\n  ret\n.LBL28_5:\n  mstore [r9,-17] r2\n  mload r2 [r9,-17]\n  add r2 r2 4\n  mstore [r9,-19] r2\n  mload r2 [r9,-19]\n  add r2 r2 4\n  mstore [r9,-21] r2\n  mload r2 [r9,-21]\n  mload r2 [r2,+4]\n  mstore [r9,-25] r2\n  mload r2 [r9,-21]\n  mload r2 [r2,+5]\n  mstore [r9,-27] r2\n  mload r2 [r9,-21]\n  mload r2 [r2,+6]\n  mstore [r9,-28] r2\n  mload r2 [r9,-21]\n  mload r2 [r2,+7]\n  mov r4 7\n  add r1 r2 1\n  add r1 r4 r1\n  mstore [r9,-24] r1\n  mload r1 [r9,-21]\n  mload r2 [r9,-24]\n  mload r1 [r1,r2]\n  add r3 r1 1\n  mload r1 [r9,-24]\n  add r1 r1 r3\n  mstore [r9,-16] r1\n  mload r1 [r9,-16]\n  mload r2 [r9,-21]\n  mload r1 [r2,r1]\n  mstore [r9,-18] r1\n  mov r1 8\n  call heap_malloc\n  mov r3 r0\n  mload r1 [r9,-21]\n  mstore [r3] r1\n  mload r1 [r9,-25]\n  mstore [r3,+1] r1\n  mload r1 [r9,-27]\n  mstore [r3,+2] r1\n  mload r1 [r9,-28]\n  mstore [r3,+3] r1\n  mload r1 [r9,-21]\n  add r1 r1 7\n  mstore [r3,+4] r1\n  mload r1 [r9,-21]\n  mload r2 [r9,-24]\n  add r1 r1 r2\n  mstore [r3,+5] r1\n  mload r1 [r9,-16]\n  mload r2 [r9,-21]\n  add r1 r2 r1\n  mstore [r3,+6] r1\n  mload r1 [r9,-18]\n  add r1 r1 1\n  mstore [r9,-23] r1\n  mload r1 [r9,-16]\n  mload r2 [r9,-23]\n  add r1 r1 r2\n  mstore [r9,-26] r1\n  mload r1 [r9,-21]\n  mload r2 [r9,-26]\n  add r1 r1 r2\n  mstore [r3,+7] r1\n  mload r2 [r9,-19]\n  mload r1 [r9,-17]\n  call executeTransaction\n  mov r1 r0\n  mstore [r9,-36] r1\n  mload r1 [r9,-36]\n  mload r1 [r1]\n  add r1 r1 1\n  mstore [r9,-20] r1\n  mload r1 [r9,-20]\n  add r1 r1 1\n  mstore [r9,-22] r1\n  mload r1 [r9,-22]\n  call heap_malloc\n  mov r1 r0\n  mstore [r9,-39] r1\n  mload r1 [r9,-36]\n  mload r1 [r1]\n  add r1 r1 1\n  mstore [r9,-29] r1\n  mload r3 [r9,-29]\n  mload r2 [r9,-39]\n  mload r1 [r9,-36]\n  call memcpy\n  mload r1 [r9,-20]\n  mload r2 [r9,-29]\n  mload r3 [r9,-39]\n  mstore [r3,r2] r1\n  mload r1 [r9,-22]\n  mload r2 [r9,-39]\n  tstore r2 r1\n  add r9 r9 -62\n  ret\n.LBL28_6:\n  mstore [r9,-45] r2\n  mload r2 [r9,-45]\n  add r2 r2 4\n  mstore [r9,-47] r2\n  mload r2 [r9,-47]\n  add r2 r2 4\n  mstore [r9,-48] r2\n  mload r2 [r9,-48]\n  mload r2 [r2,+4]\n  mstore [r9,-51] r2\n  mload r2 [r9,-48]\n  mload r2 [r2,+5]\n  mstore [r9,-42] r2\n  mload r2 [r9,-48]\n  mload r2 [r2,+6]\n  mstore [r9,-43] r2\n  mload r2 [r9,-48]\n  mload r2 [r2,+7]\n  mov r4 7\n  add r1 r2 1\n  add r1 r4 r1\n  mstore [r9,-50] r1\n  mload r1 [r9,-48]\n  mload r2 [r9,-50]\n  mload r1 [r1,r2]\n  add r3 r1 1\n  mload r1 [r9,-50]\n  add r1 r1 r3\n  mstore [r9,-44] r1\n  mload r1 [r9,-44]\n  mload r2 [r9,-48]\n  mload r1 [r2,r1]\n  mstore [r9,-46] r1\n  mov r1 8\n  call heap_malloc\n  mov r3 r0\n  mload r1 [r9,-48]\n  mstore [r3] r1\n  mload r1 [r9,-51]\n  mstore [r3,+1] r1\n  mload r1 [r9,-42]\n  mstore [r3,+2] r1\n  mload r1 [r9,-43]\n  mstore [r3,+3] r1\n  mload r1 [r9,-48]\n  add r1 r1 7\n  mstore [r3,+4] r1\n  mload r1 [r9,-48]\n  mload r2 [r9,-50]\n  add r1 r1 r2\n  mstore [r3,+5] r1\n  mload r1 [r9,-44]\n  mload r2 [r9,-48]\n  add r1 r2 r1\n  mstore [r3,+6] r1\n  mload r1 [r9,-46]\n  add r1 r1 1\n  mstore [r9,-49] r1\n  mload r1 [r9,-44]\n  mload r2 [r9,-49]\n  add r1 r1 r2\n  mstore [r9,-41] r1\n  mload r1 [r9,-41]\n  mload r2 [r9,-48]\n  add r1 r2 r1\n  mstore [r3,+7] r1\n  mload r2 [r9,-47]\n  mload r1 [r9,-45]\n  call payForTransaction\n  mov r1 1\n  call heap_malloc\n  mov r1 r0\n  mov r2 0\n  mstore [r1] r2\n  tstore r1 1\n  add r9 r9 -62\n  ret\n.LBL28_7:\n  mstore [r9,-62] r2\n  mload r2 [r9,-62]\n  add r2 r2 4\n  mstore [r9,-53] r2\n  mload r2 [r9,-53]\n  add r2 r2 4\n  mstore [r9,-54] r2\n  mload r2 [r9,-54]\n  mload r2 [r2,+4]\n  mstore [r9,-57] r2\n  mload r2 [r9,-54]\n  mload r2 [r2,+5]\n  mstore [r9,-58] r2\n  mload r2 [r9,-54]\n  mload r2 [r2,+6]\n  mstore [r9,-60] r2\n  mload r2 [r9,-54]\n  mload r2 [r2,+7]\n  mov r4 7\n  add r1 r2 1\n  add r1 r4 r1\n  mstore [r9,-56] r1\n  mload r1 [r9,-54]\n  mload r2 [r9,-56]\n  mload r1 [r1,r2]\n  add r3 r1 1\n  mload r1 [r9,-56]\n  add r1 r1 r3\n  mstore [r9,-61] r1\n  mload r1 [r9,-54]\n  mload r2 [r9,-61]\n  mload r1 [r1,r2]\n  mstore [r9,-52] r1\n  mov r1 8\n  call heap_malloc\n  mov r3 r0\n  mload r1 [r9,-54]\n  mstore [r3] r1\n  mload r1 [r9,-57]\n  mstore [r3,+1] r1\n  mload r1 [r9,-58]\n  mstore [r3,+2] r1\n  mload r1 [r9,-60]\n  mstore [r3,+3] r1\n  mload r1 [r9,-54]\n  add r1 r1 7\n  mstore [r3,+4] r1\n  mload r1 [r9,-54]\n  mload r2 [r9,-56]\n  add r1 r1 r2\n  mstore [r3,+5] r1\n  mload r1 [r9,-54]\n  mload r2 [r9,-61]\n  add r1 r1 r2\n  mstore [r3,+6] r1\n  mload r1 [r9,-52]\n  add r1 r1 1\n  mstore [r9,-55] r1\n  mload r1 [r9,-55]\n  mload r2 [r9,-61]\n  add r1 r2 r1\n  mstore [r9,-59] r1\n  mload r1 [r9,-54]\n  mload r2 [r9,-59]\n  add r1 r1 r2\n  mstore [r3,+7] r1\n  mload r2 [r9,-53]\n  mload r1 [r9,-62]\n  call prepareForPaymaster\n  mov r1 1\n  call heap_malloc\n  mov r1 r0\n  mov r2 0\n  mstore [r1] r2\n  tstore r1 1\n  add r9 r9 -62\n  ret\nmain:\n.LBL29_0:\n  add r9 r9 8\n  mstore [r9,-2] r9\n  mov r1 13\n  call heap_malloc\n  mov r5 r0\n  mov r6 1\n  tload r5 r6 13\n  mload r5 [r5]\n  mstore [r9,-4] r5\n  mov r1 14\n  call heap_malloc\n  mov r5 r0\n  mov r6 1\n  tload r5 r6 14\n  mload r5 [r5]\n  mstore [r9,-6] r5\n  mload r5 [r9,-6]\n  add r5 r5 14\n  mstore [r9,-3] r5\n  mload r1 [r9,-3]\n  call heap_malloc\n  mov r3 r0\n  mov r5 1\n  mload r6 [r9,-3]\n  tload r3 r5 r6\n  mload r2 [r9,-6]\n  mload r1 [r9,-4]\n  call function_dispatch\n  add r9 r9 -8\n  end\n",
  "prophets": [
    {
      "label": ".PROPHET20_0",
      "code": "%{\n    function mod(felt x, felt y) -> felt {\n        return x % y;\n    }\n    entry() {\n        cid.r = mod(cid.x, cid.y);\n    }\n%}",
      "inputs": [
        {
          "name": "cid.x",
          "length": 1,
          "is_ref": false,
          "is_input_output": false
        },
        {
          "name": "cid.y",
          "length": 1,
          "is_ref": false,
          "is_input_output": false
        }
      ],
      "outputs": [
        {
          "name": "cid.r",
          "length": 1,
          "is_ref": false,
          "is_input_output": false
        }
      ]
    },
    {
      "label": ".PROPHET20_1",
      "code": "%{\n    function div(felt x, felt y) -> felt {\n        return x / y;\n    }\n    entry() {\n        cid.q = div(cid.x, cid.y);\n    }\n%}",
      "inputs": [
        {
          "name": "cid.x",
          "length": 1,
          "is_ref": false,
          "is_input_output": false
        },
        {
          "name": "cid.y",
          "length": 1,
          "is_ref": false,
          "is_input_output": false
        }
      ],
      "outputs": [
        {
          "name": "cid.q",
          "length": 1,
          "is_ref": false,
          "is_input_output": false
        }
      ]
    }
  ]
}
